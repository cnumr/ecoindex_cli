name: Quality checks

on: [pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    env:
      COVERAGE_SINGLE: 10
      COVERAGE_TOTAL: 50
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with black
      run: |
        black --check .
    - name: Test with pytest
      run: |
        pytest
    # - name: Generate coverage report
    #   run : |
    #     pytest --cache-clear --cov=ecoindex_cli tests > pytest-coverage.txt
    # - name: Comment coverage
    #   uses: coroo/pytest-coverage-commentator@v1.0.2
    - name: pytest
      id: pytest
      uses: alexanderdamiani/pytester-cov@v1.0.1
      with:
        pytest-root-dir: 'tests'
        cov-omit-list: 'test/**__init__.py'
        cov-threshold-single: ${{ env.COVERAGE_TOTAL }}
        cov-threshold-total: ${{ env.COVERAGE_SINGLE }}
    - name: Commit pytest coverage table
      uses: peter-evans/commit-comment@v1
      with:
        body: ${{ steps.pytest.outputs.output-table }}
    - name: Coverage single fail - exit
      if: ${{ steps.pytest.outputs.cov-threshold-single-fail == 'true' }}
      run: |
        echo "cov single fail ${{ steps.pytest.outputs.cov-threshold-single-fail }}"
        exit 1
    - name: Coverage total fail - exit
      if: ${{ steps.pytest.outputs.cov-threshold-total-fail == 'true' }}
      run: |
        echo "cov single fail ${{ steps.pytest.outputs.cov-threshold-total-fail }}"
        exit 1